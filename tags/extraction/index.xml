<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>extraction on BIDS- Environmental</title>
    <link>/tags/extraction/</link>
    <description>Recent content in extraction on BIDS- Environmental</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2022 09:07:38 -0800</lastBuildDate><atom:link href="/tags/extraction/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Edward Stuhl - Mount Shasta Wildflowers GBIF data</title>
      <link>/2022/06/01/edward-stuhl-mount-shasta-wildflowers-gbif-data/</link>
      <pubDate>Wed, 01 Jun 2022 09:07:38 -0800</pubDate>
      
      <guid>/2022/06/01/edward-stuhl-mount-shasta-wildflowers-gbif-data/</guid>
      <description>I have been working on identifying and painting various local wildflowers from the book Mount Shasta Wild Flowers A Field Guide featuring the water color paintings of Edward Stuhl. Stuhl was an artist and mountaineer that gradually painted 189 plants over a 50 year career exploring the greater Mount Shasta area. All of his paintings are available to view online at CSU Chico here. I was interested in what sort of publicly available observation data there was for some of the more rare species.</description>
    </item>
    
    <item>
      <title>Scraping Weather Data</title>
      <link>/2022/01/15/scraping-weather-data/</link>
      <pubDate>Sat, 15 Jan 2022 09:07:38 -0800</pubDate>
      
      <guid>/2022/01/15/scraping-weather-data/</guid>
      <description>A quick post showing how to extract data from a website and make a few plots. I chose the Mount Shasta Avalanche Center data because I monitor this everyday throughout the season to see how the avalanche forecast changes and how the snowpack is developing.
R vest There is a great website scraping package that is part of the tidyverse called Rvest. Check out the Documentation.
library(rvest) library(tidyverse) library(lubridate) html &amp;lt;- read_html(&amp;quot;https://www.</description>
    </item>
    
  </channel>
</rss>
